{"version":3,"sources":["store/reducers/main_reducer.js","store/actions/action.types.js","store/context.js","store/util.js","components/toolbox/tools/btn/button.component.jsx","components/figures/code/code.component.jsx","components/figures/box-line/box-line.component.jsx","components/figures/boxes/boxes.component.jsx","components/figures/Figures.component.jsx","components/toolbox/tools/slider/slider.component.jsx","components/toolbox/tools/shadows/shadows.component.jsx","components/toolbox/tools/color-picker/color-picker.component.jsx","components/toolbox/bg_box_props/bg-box-props.component.jsx","store/actions/actions.js","components/toolbox/toolbox.component.jsx","App.js","index.js"],"names":["Store","state","action","console","log","type","LIGHT_SOURCE","payload","BUTTON_WIDTH","BUTTON_HEIGHT","BUTTON_RADIUS","BACKGROUND_COLOR","TEXT_COLOR","DISTANCE_LIGHT","DISTANCE_DARK","INTENSITY_LIGHT","INTENSITY_DARK","BLUR_LIGHT","BLUR_DARK","BUTTON_BACKGROUND","TEXT_SIZE","CUSTOM_TEXT","CON_INTENSITY_LIGHT","CON_INTENSITY_DARK","BG_BTN_SAME","initialState","NeoContext","createContext","NeoContextProvider","props","useReducer","dispatch","Provider","value","children","invertColor","hex","bw","indexOf","slice","length","Error","r","parseInt","g","b","toString","padZero","str","len","Array","join","Button","clickHandler","className","onClick","ShowCode","boxBG","background","boxShadow","height","width","borderRadius","txtColor","txt","con","textAreaRef","useRef","useState","copied","setCopied","ref","id","readOnly","style","e","current","select","document","execCommand","target","focus","setTimeout","BoxLine","useContext","styles","color","fontSize","showCode","setShowCode","BG_color","flatStyleTL","insetStyleTL","convexStyleTL","concaveStyleTL","flatStyleTR","insetStyleTR","convexStyleTR","concaveStyleTR","flatStyleBR","insetStyleBR","convexStyleBR","concaveStyleBR","flatStyleBL","types","TL","boxType","bg","TR","BR","BL","BoxBG_Color","LstyleBox","LstyleCircle","key","Boxes","borderBottom","Figures","Slider","name","maxVal","minVal","curVal","onChangeHandler","min","max","onChange","ShadowSet","distanceVar","distanceCallback","blurVar","blurCallback","intensityVar","intensityCallback","displayParamPicker","setdisplayParamPicker","ColorPickerBtn","text","val","btnText","displayColorPicker","setdisplayColorPicker","padStart","BgBoxProps","onTextSet","TEXT_COLOR_SET","onLightSourcetSet","LIGHT_SOURCE_SET","invColor","intensity","Intl","NumberFormat","minimumFractionDigits","margin","BACKGROUND_COLOR_SET","disableAlpha","marginTop","htmlFor","checked","BG_BTN_SAME_SET","marginBottom","BUTTON_BACKGROUND_SET","maxLength","CUSTOM_TEXT_SET","TEXT_SIZE_SET","display","justifyContent","alignItems","transform","BUTTON_WIDTH_SET","BUTTON_HEIGHT_SET","BUTTON_RADIUS_SET","format","DISTANCE_LIGHT_SET","BLUR_LIGHT_SET","INTENSITY_LIGHT_SET","DISTANCE_DARK_SET","BLUR_DARK_SET","INTENSITY_DARK_SET","CON_INTENSITY_LIGHT_SET","CON_INTENSITY_DARK_SET","Toolbox","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e26f7303.chunk.js","sourcesContent":["import {\r\n  BACKGROUND_COLOR,\r\n  TEXT_COLOR, \r\n  DISTANCE_LIGHT, \r\n  DISTANCE_DARK,\r\n  INTENSITY_LIGHT, \r\n  INTENSITY_DARK, \r\n  BLUR_LIGHT, \r\n  BLUR_DARK, \r\n  BUTTON_BACKGROUND, \r\n  TEXT_SIZE, \r\n  CUSTOM_TEXT,\r\n  CON_INTENSITY_LIGHT, \r\n  CON_INTENSITY_DARK,\r\n  BG_BTN_SAME,\r\n  BUTTON_WIDTH,\r\n  BUTTON_HEIGHT,\r\n  BUTTON_RADIUS,\r\n  LIGHT_SOURCE,\r\n} from '../actions/action.types'\r\n\r\n\r\nconst Store= (state, action) =>{\r\n  console.log('CURRENTSTATE:', state,action)\r\n  switch(action.type){\r\n    case LIGHT_SOURCE:\r\n      return{\r\n        ...state, LIGHT_SOURCE: action.payload\r\n      }\r\n    case BUTTON_WIDTH:\r\n      return{\r\n        ...state, BUTTON_WIDTH: action.payload\r\n      }\r\n    case BUTTON_HEIGHT:\r\n      return{\r\n        ...state, BUTTON_HEIGHT: action.payload\r\n      }\r\n    case BUTTON_RADIUS:\r\n      return{\r\n        ...state, BUTTON_RADIUS: action.payload\r\n      }\r\n    case BACKGROUND_COLOR:\r\n      return{\r\n        ...state, BACKGROUND_COLOR: action.payload\r\n      }\r\n    case TEXT_COLOR:\r\n      return{\r\n        ...state, TEXT_COLOR: action.payload\r\n      }\r\n    case DISTANCE_LIGHT:\r\n      return{\r\n        ...state, DISTANCE_LIGHT: action.payload\r\n      }\r\n    case DISTANCE_DARK:\r\n      return{\r\n        ...state, DISTANCE_DARK: action.payload\r\n      }\r\n    case INTENSITY_LIGHT:\r\n      return{\r\n        ...state, INTENSITY_LIGHT: action.payload\r\n      }\r\n    case INTENSITY_DARK:\r\n      return{\r\n        ...state, INTENSITY_DARK: action.payload\r\n      }\r\n    case BLUR_LIGHT:\r\n      return{\r\n        ...state, BLUR_LIGHT: action.payload\r\n      }\r\n    case BLUR_DARK:\r\n      return{\r\n        ...state, BLUR_DARK: action.payload\r\n      }\r\n    case BUTTON_BACKGROUND:\r\n      return{\r\n        ...state, BUTTON_BACKGROUND: action.payload\r\n      }\r\n    case TEXT_SIZE:\r\n      return{\r\n        ...state, TEXT_SIZE: action.payload\r\n      }\r\n    case CUSTOM_TEXT:\r\n      return{\r\n        ...state, CUSTOM_TEXT: action.payload\r\n      }\r\n    case CON_INTENSITY_LIGHT:\r\n      return{\r\n        ...state, CON_INTENSITY_LIGHT: action.payload\r\n      }\r\n    case CON_INTENSITY_DARK:\r\n      return{\r\n        ...state, CON_INTENSITY_DARK: action.payload\r\n      }\r\n    case BG_BTN_SAME:\r\n      return{\r\n        ...state, BG_BTN_SAME: action.payload\r\n      }  \r\n    default: return state\r\n  }\r\n}\r\n\r\nexport default Store","export const BACKGROUND_COLOR = 'BACKGROUND_COLOR'\r\nexport const TEXT_COLOR = 'TEXT_COLOR'\r\nexport const DISTANCE_LIGHT = 'DISTANCE_LIGHT'\r\nexport const DISTANCE_DARK = 'DISTANCE_DARK'\r\nexport const INTENSITY_LIGHT = 'INTENSITY_LIGHT'\r\nexport const INTENSITY_DARK = 'INTENSITY_DARK'\r\nexport const BLUR_LIGHT = 'BLUR_LIGHT'\r\nexport const BLUR_DARK = 'BLUR_DARK'\r\nexport const BUTTON_BACKGROUND = 'BUTTON_BACKGROUND'\r\nexport const TEXT_SIZE = 'TEXT_SIZE'\r\nexport const CUSTOM_TEXT = 'NEO-BUTTONS'\r\nexport const BUTTON_WIDTH = 'BUTTON_WIDTH'\r\nexport const BUTTON_HEIGHT = 'BUTTON_HEIGHT'\r\nexport const BUTTON_RADIUS = 'BUTTON_RADIUS'\r\n// ******************  properties for T2 type buttons ******************\r\nexport const CON_INTENSITY_LIGHT = 'CON_INTENSITY_LIGHT'\r\nexport const CON_INTENSITY_DARK = 'CON_INTENSITY_DARK'\r\n// ******************* INTERACTION BUTTONS ********************************\r\nexport const BG_BTN_SAME = 'BG_BTN_SAME'\r\nexport const LIGHT_SOURCE = 'LIGHT_SOURCE'\r\n","import React, { createContext, useReducer } from 'react';\r\nimport Store from './reducers/main_reducer';\r\n\r\n\r\nconst initialState={\r\n  BACKGROUND_COLOR: '#2d50ef',\r\n  TEXT_COLOR: '#6eff00', \r\n  DISTANCE_LIGHT: 8, \r\n  DISTANCE_DARK: 12,\r\n  INTENSITY_LIGHT: 10, \r\n  INTENSITY_DARK: 80, \r\n  BLUR_LIGHT: 12, \r\n  BLUR_DARK: 16, \r\n  BUTTON_BACKGROUND: '#208fd3', \r\n  TEXT_SIZE: 22, \r\n  CUSTOM_TEXT: 'NEO-BUTTON', \r\n  CON_INTENSITY_LIGHT: 22, \r\n  CON_INTENSITY_DARK: 25,\r\n  BG_BTN_SAME: false,\r\n  BUTTON_WIDTH: 400,\r\n  BUTTON_HEIGHT: 160,\r\n  BUTTON_RADIUS: 50,\r\n  LIGHT_SOURCE: 'TL'\r\n}\r\n\r\nexport const NeoContext = createContext();\r\n\r\n\r\nconst NeoContextProvider = (props) => {\r\n  // было  const {state, dispatch} = useReducer(Store, initialState)\r\n  const [state, dispatch] = useReducer(Store, initialState)\r\n\r\n  \r\n  return (\r\n    <NeoContext.Provider value={{state, dispatch}}>\r\n      {props.children}\r\n    </NeoContext.Provider>\r\n  );\r\n}\r\n \r\nexport default NeoContextProvider;","export function invertColor(hex, bw) {\r\n  if (hex.indexOf('#') === 0) {\r\n      hex = hex.slice(1);\r\n  }\r\n  // convert 3-digit hex to 6-digits.\r\n  if (hex.length === 3) {\r\n      hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\r\n  }\r\n  if (hex.length !== 6) {\r\n      throw new Error('Invalid HEX color.');\r\n  }\r\n  var r = parseInt(hex.slice(0, 2), 16),\r\n      g = parseInt(hex.slice(2, 4), 16),\r\n      b = parseInt(hex.slice(4, 6), 16);\r\n  if (bw) {\r\n      // http://stackoverflow.com/a/3943023/112731\r\n      return (r * 0.299 + g * 0.587 + b * 0.114) > 186\r\n          ? '#000000'\r\n          : '#FFFFFF';\r\n  }\r\n  // invert color components\r\n  r = (255 - r).toString(16);\r\n  g = (255 - g).toString(16);\r\n  b = (255 - b).toString(16);\r\n  // pad each with zeros and return\r\n  return \"#\" + padZero(r) + padZero(g) + padZero(b);\r\n}\r\n\r\nexport function padZero(str, len) {\r\n  len = len || 2;\r\n  var zeros = new Array(len).join('0');\r\n  return (zeros + str).slice(-len);\r\n}\r\n\r\n","import React from 'react'\r\nimport './button.styles.scss'\r\n\r\nconst Button = ({children, clickHandler}) => {\r\n  return (\r\n      <button className=\"flat btn-style\" \r\n              onClick={clickHandler}>\r\n        {children}\r\n      </button>\r\n  )\r\n}\r\n\r\nexport default Button\r\n","import React, {useRef, useState} from 'react'\r\nimport './code.styles.scss'\r\n\r\nconst ShowCode = ({boxBG, background, boxShadow, height, width, borderRadius, txtColor, txt, clickHandler}) => {\r\n  const con = '.Container{\\n  display: flex;\\n  justify-content: center;\\n'+\r\n              '  align-items: center;\\n  margin: 0;\\n  padding: 0;\\n'+\r\n              '  background-size: cover;\\n  background: '+boxBG+';\\n  color: '+txtColor+';\\n'+\r\n              '}\\n'+\r\n              '.Box{\\n'+ \r\n              '  align-items: center;\\n  text-align: center;\\n  display: flex;\\n'+\r\n              '  justify-content: center;\\n  margin: 25px;\\n  padding: 0;\\n'+\r\n              '  overflow: hidden;}\\n'+\r\n              '.Circle{\\n  background: '+background+';\\n  box-shadow: '+boxShadow+';\\n'+\r\n              '  height: '+height+';\\n  width: '+height+';\\n  border-radius: 50%;\\n'+\r\n              '}\\n'+\r\n              '.Rectangle{\\n  background: '+background+';\\n  box-shadow: '+boxShadow+';\\n'+\r\n              '  height: '+height+';\\n  width: '+width+';\\n  border-radius: '+borderRadius+';\\n'+\r\n              '}\\n'+\r\n              '<div class=\"Container\">\\n  <div class=\"Box Circle\">'+txt+'</div>\\n'+\r\n              '  <div class=\"Box Rectangle\">'+txt+'</div>\\n</div>\\n'\r\n  const textAreaRef = useRef(null);\r\n  const [copied, setCopied] = useState(false)\r\n  \r\n  function copyToClipboard(e) {\r\n    textAreaRef.current.select();\r\n    document.execCommand('copy');\r\n    e.target.focus();\r\n    setCopied(true)\r\n    setTimeout(()=> clickHandler(),1000)\r\n\r\n  };           \r\n\r\n  return (\r\n    <div className='box Code_Box inset'>\r\n      <div className=\"overlaycontent code\">\r\n        <textarea ref={textAreaRef} id='txtArea' value={con} readOnly />\r\n      </div>\r\n      {copied\r\n      ?<p>Code copied into clipboard</p>\r\n      :\r\n      <button className=\"flat btn-style\" \r\n              style={{width: 200}}\r\n              onClick={copyToClipboard}>Copy to clipboard&close</button>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ShowCode\r\n","import React, {useContext, useState} from 'react'\r\nimport { NeoContext } from '../../../store/context';\r\nimport './box-line.styles.scss'\r\nimport Button from '../../toolbox/tools/btn/button.component'\r\nimport ShowCode from '../code/code.component'\r\n\r\nconst BoxLine= ({type}) => {\r\n  const { state:{ TEXT_COLOR, \r\n                  TEXT_SIZE,\r\n                  DISTANCE_DARK,\r\n                  DISTANCE_LIGHT,\r\n                  BLUR_DARK,\r\n                  BLUR_LIGHT,\r\n                  INTENSITY_DARK,\r\n                  INTENSITY_LIGHT,\r\n                  CON_INTENSITY_LIGHT,\r\n                  CON_INTENSITY_DARK,\r\n                  BACKGROUND_COLOR,\r\n                  BUTTON_BACKGROUND,\r\n                  BG_BTN_SAME,\r\n                  BUTTON_WIDTH,\r\n                  BUTTON_HEIGHT,\r\n                  BUTTON_RADIUS,\r\n                  LIGHT_SOURCE,\r\n                  CUSTOM_TEXT\r\n                }} = useContext(NeoContext)\r\n\r\n    const styles ={\r\n      color: TEXT_COLOR,\r\n      fontSize: TEXT_SIZE+'px'\r\n    }\r\n\r\n\r\n    const [showCode, setShowCode] = useState(false)\r\n\r\n    const BG_color = BG_BTN_SAME ? BUTTON_BACKGROUND : BACKGROUND_COLOR\r\n    // ****************************** TOP-LEFT SHADOWS ******************************\r\n    const flatStyleTL=\r\n      `${DISTANCE_DARK}px ${DISTANCE_DARK}px ${BLUR_DARK}px rgba( 0, 0, 0, ${INTENSITY_DARK/100}),${-DISTANCE_LIGHT}px ${-DISTANCE_LIGHT}px ${BLUR_LIGHT}px rgba( 255, 255, 255, ${INTENSITY_LIGHT/100})`\r\n\r\n    const insetStyleTL=\r\n    `inset ${DISTANCE_DARK}px ${DISTANCE_DARK}px ${BLUR_DARK}px rgba( 0, 0, 0, ${INTENSITY_DARK/100}), inset ${-DISTANCE_LIGHT}px ${-DISTANCE_LIGHT}px ${BLUR_LIGHT}px rgba( 255, 255, 255, ${INTENSITY_LIGHT/100})`\r\n    \r\n\r\n    const convexStyleTL=\r\n    // `linear-gradient(-45deg, rgba(0,0,0,0.22), rgba(255,255,255,.25)), ${BG_color}`\r\n    `linear-gradient(-45deg, rgba(0,0,0,${CON_INTENSITY_DARK/100}), rgba(255,255,255,${CON_INTENSITY_LIGHT/100})), ${BG_color}`\r\n\r\n    const concaveStyleTL=\r\n    // `linear-gradient(135deg, rgba(0,0,0,0.22), rgba(255,255,255,.25)), ${BG_color}`\r\n    `linear-gradient(135deg, rgba(0,0,0,${CON_INTENSITY_DARK/100}), rgba(255,255,255,${CON_INTENSITY_LIGHT/100})), ${BG_color}`\r\n\r\n    // ****************************** TOP-RIGHT SHADOWS ******************************\r\n    const flatStyleTR=\r\n      `${-DISTANCE_DARK}px ${DISTANCE_DARK}px ${BLUR_DARK}px rgba( 0, 0, 0, ${INTENSITY_DARK/100}),${DISTANCE_LIGHT}px ${-DISTANCE_LIGHT}px ${BLUR_LIGHT}px rgba( 255, 255, 255, ${INTENSITY_LIGHT/100})`\r\n\r\n    const insetStyleTR=\r\n    `inset ${-DISTANCE_DARK}px ${DISTANCE_DARK}px ${BLUR_DARK}px rgba( 0, 0, 0, ${INTENSITY_DARK/100}), inset ${DISTANCE_LIGHT}px ${-DISTANCE_LIGHT}px ${BLUR_LIGHT}px rgba( 255, 255, 255, ${INTENSITY_LIGHT/100})`\r\n\r\n\r\n    const convexStyleTR=\r\n    // `linear-gradient(45deg, rgba(0,0,0,0.22), rgba(255,255,255,.25)), ${BG_color}`\r\n    `linear-gradient(45deg, rgba(0,0,0,${CON_INTENSITY_DARK/100}), rgba(255,255,255,${CON_INTENSITY_LIGHT/100})), ${BG_color}`\r\n\r\n    const concaveStyleTR=\r\n    // `linear-gradient(-135deg, rgba(0,0,0,.22), rgba(255,255,255,.25)), ${BG_color}`\r\n    `linear-gradient(-135deg, rgba(0,0,0,${CON_INTENSITY_DARK/100}), rgba(255,255,255,${CON_INTENSITY_LIGHT/100})), ${BG_color}`\r\n\r\n    // ****************************** BOTTOM-RIGHT SHADOWS ******************************\r\n    const flatStyleBR=\r\n      `${-DISTANCE_DARK}px ${-DISTANCE_DARK}px ${BLUR_DARK}px rgba( 0, 0, 0, ${INTENSITY_DARK/100}),${DISTANCE_LIGHT}px ${DISTANCE_LIGHT}px ${BLUR_LIGHT}px rgba( 255, 255, 255, ${INTENSITY_LIGHT/100})`\r\n\r\n    const insetStyleBR=\r\n    `inset ${-DISTANCE_DARK}px ${-DISTANCE_DARK}px ${BLUR_DARK}px rgba( 0, 0, 0, ${INTENSITY_DARK/100}), inset ${DISTANCE_LIGHT}px ${DISTANCE_LIGHT}px ${BLUR_LIGHT}px rgba( 255, 255, 255, ${INTENSITY_LIGHT/100})`\r\n\r\n\r\n    const convexStyleBR=\r\n    // `linear-gradient(135deg, rgba(0,0,0,.22), rgba(255,255,255,.25)), ${BG_color}`\r\n    `linear-gradient(135deg, rgba(0,0,0,${CON_INTENSITY_DARK/100}), rgba(255,255,255,${CON_INTENSITY_LIGHT/100})), ${BG_color}`\r\n    \r\n    const concaveStyleBR=\r\n    `linear-gradient(-45deg, rgba(0,0,0,${CON_INTENSITY_DARK/100}), rgba(255,255,255,${CON_INTENSITY_LIGHT/100})), ${BG_color}`\r\n    // `linear-gradient(-45deg, rgba(0,0,0,.22), rgba(255,255,255,.25)), ${BG_color}`\r\n\r\n    // ****************************** BOTTOM-LEFT SHADOWS ******************************\r\n    const flatStyleBL=\r\n      `${DISTANCE_DARK}px ${-DISTANCE_DARK}px ${BLUR_DARK}px rgba( 0, 0, 0, ${INTENSITY_DARK/100}),${-DISTANCE_LIGHT}px ${DISTANCE_LIGHT}px ${BLUR_LIGHT}px rgba( 255, 255, 255, ${INTENSITY_LIGHT/100})`\r\n\r\n    const insetStyleBL=\r\n    `inset ${DISTANCE_DARK}px ${-DISTANCE_DARK}px ${BLUR_DARK}px rgba( 0, 0, 0, ${INTENSITY_DARK/100}), inset ${-DISTANCE_LIGHT}px ${DISTANCE_LIGHT}px ${BLUR_LIGHT}px rgba( 255, 255, 255, ${INTENSITY_LIGHT/100})`\r\n\r\n\r\n    const convexStyleBL=\r\n    // `linear-gradient(-135deg, rgba(0,0,0,.22), rgba(255,255,255,.25)), ${BG_color}`\r\n    `linear-gradient(-135deg, rgba(0,0,0,${CON_INTENSITY_DARK/100}), rgba(255,255,255,${CON_INTENSITY_LIGHT/100})), ${BG_color}`\r\n\r\n    const concaveStyleBL=\r\n    // `linear-gradient(45deg, rgba(0,0,0,.22), rgba(255,255,255,.25)), ${BG_color}`\r\n    `linear-gradient(45deg, rgba(0,0,0,${CON_INTENSITY_DARK/100}), rgba(255,255,255,${CON_INTENSITY_LIGHT/100})), ${BG_color}`\r\n\r\n    \r\n    const types=[\r\n      { TL: {boxType:flatStyleTL, bg: ''},\r\n        TR: {boxType:flatStyleTR, bg: ''},\r\n        BR: {boxType:flatStyleBR, bg: ''},\r\n        BL: {boxType:flatStyleBL, bg: ''},\r\n        type: 'FLAT'\r\n        // styles: 'BoxT1 box'\r\n      },\r\n      { TL: {boxType:insetStyleTL, bg: ''},\r\n        TR: {boxType:insetStyleTR, bg: ''},\r\n        BR: {boxType:insetStyleBR, bg: ''},\r\n        BL: {boxType:insetStyleBL, bg: ''},\r\n        type: 'INSET'\r\n        // styles: 'BoxT1 box',\r\n      },\r\n      { TL: {boxType:flatStyleTL, bg: convexStyleTL},\r\n        TR: {boxType:flatStyleTR, bg: convexStyleTR},\r\n        BR: {boxType:flatStyleBR, bg: convexStyleBR},\r\n        BL: {boxType:flatStyleBL, bg: convexStyleBL},\r\n        type: 'CONVEX'\r\n        // styles: 'BoxT2'\r\n      },\r\n      { TL: {boxType:flatStyleTL, bg: concaveStyleTL},\r\n        TR: {boxType:flatStyleTR, bg: concaveStyleTR},\r\n        BR: {boxType:flatStyleBR, bg: concaveStyleBR},\r\n        BL: {boxType:flatStyleBL, bg: concaveStyleBL},\r\n        type: 'CONCAVE'\r\n        // styles: 'BoxT2'\r\n      },\r\n    ]\r\n  \r\n    const ls ={'TL':'TOP-LEFT','TR':'TOP-RIGHT','BR':'BOTTOM-RIGHT','BL':'BOTTOM-LEFT', }\r\n\r\n    const BoxBG_Color =  types[type][LIGHT_SOURCE].bg.length > 0  ? types[type][LIGHT_SOURCE].bg\r\n                                                                  : BG_BTN_SAME ? BUTTON_BACKGROUND\r\n                                                                  : BACKGROUND_COLOR\r\n\r\n\r\n    const LstyleBox={\r\n      background: BoxBG_Color,\r\n      boxShadow: types[type][LIGHT_SOURCE].boxType,\r\n      height: BUTTON_HEIGHT.toString()+'px',\r\n      width: BUTTON_WIDTH.toString()+'px',\r\n      borderRadius: BUTTON_RADIUS.toString()+'px'\r\n    }     \r\n\r\n    const LstyleCircle={\r\n      background: BoxBG_Color,\r\n      boxShadow: types[type][LIGHT_SOURCE].boxType,\r\n      height: BUTTON_HEIGHT.toString()+'px',\r\n      width: BUTTON_HEIGHT.toString()+'px',\r\n      borderRadius: '50%'\r\n    }  \r\n\r\n    return (\r\n      <div key={type} className='BoxLine' style={styles}> \r\n        <div className=\"infoBox inset\">\r\n          <p>Button type: {types[type].type}</p>\r\n          <p>Source of ligth: {ls[LIGHT_SOURCE]}</p>\r\n          <Button clickHandler={()=>setShowCode(!showCode)}>{showCode?'Close':'Show CSS'}</Button>\r\n          { showCode\r\n            ? <ShowCode background= {BoxBG_Color}\r\n                        boxShadow={types[type][LIGHT_SOURCE].boxType}\r\n                        height= {BUTTON_HEIGHT.toString()+'px'}\r\n                        width= {BUTTON_WIDTH.toString()+'px'}\r\n                        borderRadius= {BUTTON_RADIUS.toString()+'px'}\r\n                        boxBG= {BACKGROUND_COLOR}\r\n                        txtColor = {TEXT_COLOR}\r\n                        txt = {CUSTOM_TEXT}\r\n                        clickHandler={()=>setShowCode(!showCode)}\r\n            />\r\n            : null\r\n          }\r\n        </div>\r\n        <div className=\"drawCircle\">\r\n          <div className=\"Box\" style={LstyleCircle}>\r\n            {CUSTOM_TEXT}\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"drawBox\">\r\n          <div  className=\"Box\" style={LstyleBox}>\r\n            {CUSTOM_TEXT}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default BoxLine\r\n","import React,{useContext} from 'react'\r\nimport { invertColor } from \"../../../store/util\";\r\nimport { NeoContext } from '../../../store/context';\r\nimport BoxLine from '../box-line/box-line.component'\r\n\r\n\r\nimport './boxes.styles.scss'\r\nconst Boxes = () => {\r\n  const { state:{ BACKGROUND_COLOR }} = useContext(NeoContext)\r\n\r\n  return (\r\n    <div className='Boxes' style={{borderBottom: `1px solid ${invertColor(BACKGROUND_COLOR)}`}}>\r\n      <BoxLine type={0}/>\r\n      <BoxLine type={1}/>\r\n      <BoxLine type={2}/>\r\n      <BoxLine type={3}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Boxes\r\n","import React, { useContext } from \"react\";\r\n// import { invertColor } from \"../../store/util\";\r\nimport { NeoContext } from \"../../store/context\";\r\nimport Boxes from \"./boxes/boxes.component\";\r\nimport \"./figures.styles.scss\";\r\n\r\nconst Figures = () => {\r\n  const {\r\n          state: { BACKGROUND_COLOR },\r\n        } = useContext(NeoContext);\r\n\r\n  return (\r\n    <div\r\n      className=\"figureBox flat\"\r\n      style={{\r\n        background: BACKGROUND_COLOR,\r\n        // color: invertColor(BACKGROUND_COLOR),\r\n      }}\r\n    >\r\n      {/* <h2 style={{textAlign: 'center'}}>List of figures</h2> */}\r\n      <Boxes />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Figures;\r\n","import React from 'react'\r\nimport './slider.styles.scss'\r\n\r\nconst Slider = ({name,maxVal, minVal, curVal, onChangeHandler }) => {\r\n  return (\r\n    <div className=\"controls\">\r\n      <input  className=\"slider flat\" \r\n              name={name} \r\n              type=\"range\" \r\n              min={minVal} \r\n              max={maxVal} \r\n              value={curVal} \r\n              onChange = {onChangeHandler}/>\r\n    </div>  \r\n    )\r\n}\r\n\r\nexport default Slider\r\n","import React, {useState} from 'react'\r\nimport Slider from '../slider/slider.component'\r\nimport Button from '../btn/button.component'\r\nimport './shadows.style.scss'\r\n\r\n\r\nconst ShadowSet = ({distanceVar, distanceCallback,\r\n                    blurVar, blurCallback,\r\n                    intensityVar, intensityCallback}) => {\r\n\r\n  const [displayParamPicker, setdisplayParamPicker] = useState(false)\r\n\r\n  return (\r\n    <div className='divs'>\r\n      <Button clickHandler={()=> setdisplayParamPicker(!displayParamPicker)}>\r\n        {displayParamPicker? 'Close': 'Set'}\r\n      </Button>\r\n      { displayParamPicker \r\n          ? <div className=\"overlay\">\r\n              <div className=\"content\">\r\n                <div className=\"line\">\r\n                  <p>Distance:</p>\r\n                  <Slider name='Distance' minVal={0} maxVal={20} curVal={distanceVar} onChangeHandler={e=>distanceCallback(e.target.value)}/>\r\n                </div>  \r\n                <div className=\"line\">\r\n                  <p>Blur:</p>\r\n                  <Slider name='Blur' minVal={0} maxVal={20} curVal={blurVar} onChangeHandler={e=>blurCallback(e.target.value)}/>\r\n                </div>  \r\n                <div className=\"line\">\r\n                  <p>Intensivity:</p>\r\n                  <Slider name='Intensity' minVal={0} maxVal={100} curVal={intensityVar} onChangeHandler={e=>intensityCallback(e.target.value)}/>\r\n                </div>\r\n              </div>\r\n           </div>\r\n        : null }\r\n    </div>  \r\n    )\r\n}\r\n\r\nexport default ShadowSet\r\n\r\n","import React, {useState} from 'react'\r\nimport Button from '../btn/button.component'\r\nimport './color-picker.style.scss'\r\n\r\nconst ColorPickerBtn = ({text, val, children, btnText='Pick color'}) => {\r\n\r\n  const [displayColorPicker, setdisplayColorPicker] = useState(false)\r\n  \r\n  \r\n  return (\r\n    <div className='divs'>\r\n      <div>\r\n        <p>{text}:<span>{val.padStart(7,' ')}</span></p>\r\n      </div>\r\n      <div className='Elem-color' style={{background: val}}/>\r\n      <Button clickHandler={()=>setdisplayColorPicker(!displayColorPicker) }>\r\n          {displayColorPicker? 'Close': btnText}\r\n      </Button>\r\n      { displayColorPicker \r\n          ? <div className=\"overlay\">\r\n              <div className=\"overlaycontent\">\r\n                {children}\r\n              </div>\r\n           </div>\r\n        : null }\r\n    </div>  \r\n    )\r\n    \r\n}\r\n\r\nexport default ColorPickerBtn\r\n","import React, {useContext} from 'react'\r\nimport {ChromePicker} from 'react-color'\r\nimport {invertColor} from '../../../store/util'\r\nimport {NeoContext} from '../../../store/context'\r\nimport Slider from '../tools/slider/slider.component'\r\nimport ShadowSet from '../tools/shadows/shadows.component'\r\nimport ColorPickerBtn from '../tools/color-picker/color-picker.component'\r\nimport HighlightIcon from '@material-ui/icons/Highlight';\r\n\r\nimport {\r\n  TEXT_SIZE_SET, \r\n  BLUR_DARK_SET,\r\n  TEXT_COLOR_SET, \r\n  BLUR_LIGHT_SET,\r\n  BG_BTN_SAME_SET,\r\n  CUSTOM_TEXT_SET, \r\n  BUTTON_WIDTH_SET, \r\n  LIGHT_SOURCE_SET,\r\n  DISTANCE_DARK_SET,\r\n  BUTTON_HEIGHT_SET, \r\n  BUTTON_RADIUS_SET, \r\n  DISTANCE_LIGHT_SET,\r\n  INTENSITY_DARK_SET,\r\n  INTENSITY_LIGHT_SET,\r\n  BACKGROUND_COLOR_SET,\r\n  BUTTON_BACKGROUND_SET, \r\n  CON_INTENSITY_DARK_SET,\r\n  CON_INTENSITY_LIGHT_SET,\r\n} from '../../../store/actions/actions'\r\n\r\nimport './bg-box-props.styles.scss'\r\n\r\nconst BgBoxProps=props=> {\r\n  const { state:{ \r\n                  TEXT_SIZE, \r\n                  BLUR_DARK, \r\n                  TEXT_COLOR, \r\n                  BLUR_LIGHT, \r\n                  BG_BTN_SAME,\r\n                  CUSTOM_TEXT,\r\n                  BUTTON_WIDTH, \r\n                  LIGHT_SOURCE,\r\n                  BUTTON_HEIGHT, \r\n                  DISTANCE_DARK,\r\n                  BUTTON_RADIUS, \r\n                  INTENSITY_DARK,\r\n                  DISTANCE_LIGHT, \r\n                  INTENSITY_LIGHT,\r\n                  BACKGROUND_COLOR,\r\n                  BUTTON_BACKGROUND, \r\n                  CON_INTENSITY_DARK,\r\n                  CON_INTENSITY_LIGHT, \r\n                },\r\n                  dispatch } = useContext(NeoContext)\r\n\r\n    const onBgSet =val => dispatch(BACKGROUND_COLOR_SET(val))\r\n    const onTextSet =val => dispatch(TEXT_COLOR_SET(val))\r\n    const onBtnBGSet =val => dispatch(BUTTON_BACKGROUND_SET(val))\r\n    const onBtnWidthSet =val => dispatch(BUTTON_WIDTH_SET(val))\r\n    const onTextSizeSet =val => dispatch(TEXT_SIZE_SET(val))\r\n    const onBlurDarkSet = val => dispatch(BLUR_DARK_SET(val))\r\n    const onBtnHeightSet =val => dispatch(BUTTON_HEIGHT_SET(val))\r\n    const onBlurLightSet = val => dispatch(BLUR_LIGHT_SET(val))\r\n    const onCustomTextSet =val => dispatch(CUSTOM_TEXT_SET(val))\r\n    const onLightSourcetSet =val => dispatch(LIGHT_SOURCE_SET(val))\r\n    const onButtonRadiusSet = val => dispatch(BUTTON_RADIUS_SET(val))\r\n    const onDistanceDarkSet = val => dispatch(DISTANCE_DARK_SET(val))\r\n    const onBGButtonSameSet =val => dispatch(BG_BTN_SAME_SET(val))\r\n    const onDistanceLightSet = val => dispatch(DISTANCE_LIGHT_SET(val))\r\n    const onIntensityDarkSet = val => dispatch(INTENSITY_DARK_SET(val))\r\n    const onIntensityLightSet = val => dispatch(INTENSITY_LIGHT_SET(val))\r\n    const onConIntensityDarkSet =val => dispatch(CON_INTENSITY_DARK_SET(val))\r\n    const onConIntensityLightSet =val => dispatch(CON_INTENSITY_LIGHT_SET(val))\r\n\r\n    const invColor = BG_BTN_SAME? BUTTON_BACKGROUND :BACKGROUND_COLOR\r\n    const intensity = new Intl.NumberFormat('en-US',\r\n                        { minimumFractionDigits: 2 });\r\n \r\n\r\n  return (\r\n      <div className='box inset BG_Box' id='internal' style={{margin: 0}}>\r\n        <div className=\"elem\">\r\n          <ColorPickerBtn text='Background color' val ={BACKGROUND_COLOR}> \r\n            <ChromePicker color={BACKGROUND_COLOR} \r\n                          onChange={color=>onBgSet(color.hex)}\r\n                          disableAlpha={true}/>\r\n\r\n          </ColorPickerBtn> \r\n        </div>\r\n        <div className=\"elem\">\r\n          <ColorPickerBtn text='ButtonText color' val={TEXT_COLOR}> \r\n            <ChromePicker color={TEXT_COLOR} \r\n                          onChange={color=>onTextSet(color.hex)}\r\n                          disableAlpha={true}/>\r\n          </ColorPickerBtn>\r\n        </div>\r\n        <div className=\"elem\" >\r\n          <div className=\"normalText\" style={{marginTop:20}}>\r\n            <p>Recommended TextColor: <span>{invertColor(invColor)}</span></p>\r\n            <button className='btn-style flat'\r\n                    onClick={e=>onTextSet(invertColor(invColor))}>\r\n            Apply it\r\n            </button>                    \r\n          </div>\r\n        </div>\r\n        <div className=\"elem\">\r\n          <div className='normalText'>\r\n            <label htmlFor='BTN_SAME_COLOR'>Button background is different</label> \r\n            <input  type=\"checkbox\" name='BTN_SAME_COLOR' \r\n                    checked={BG_BTN_SAME}\r\n                    onChange={e=>onBGButtonSameSet(e.target.checked)}/>\r\n          </div>\r\n          {BG_BTN_SAME\r\n            ? <div style={{marginBottom: 30}}>\r\n                <ColorPickerBtn text='Background color' val={BUTTON_BACKGROUND}> \r\n                  <ChromePicker color={BUTTON_BACKGROUND} \r\n                                onChange={color=>onBtnBGSet(color.hex)}\r\n                                disableAlpha={true}/>\r\n                </ColorPickerBtn>\r\n              </div>  \r\n            :null}\r\n        </div>\r\n        <div className=\"elem\">\r\n          <div className=\"normalText\">\r\n            <label htmlFor='BTN_TEXT'>Button text</label> \r\n              <input  type=\"text\" name='BTN_TEXT' \r\n                      maxLength=\"10\"\r\n                      value={CUSTOM_TEXT}\r\n                      onChange={e=>onCustomTextSet(e.target.value)}\r\n                      className ='flat'/>\r\n              <p>Text size: <span>{TEXT_SIZE}px</span></p>\r\n              <Slider name='TextSize' minVal={16} maxVal={32} \r\n                      curVal={TEXT_SIZE} \r\n                      onChangeHandler={e=>onTextSizeSet(e.target.value)} />\r\n          </div>\r\n        </div>    \r\n        <div className=\"elem\" style={{display:'flex', justifyContent: 'space-between', alignItems: 'center'}}>\r\n            <p>Shadow direction:</p>\r\n                <label>\r\n                  <input  type=\"radio\" value=\"TL\" \r\n                          className='radiobtn'\r\n                          checked={LIGHT_SOURCE==='TL'} \r\n                          onChange={e=> onLightSourcetSet(e.target.value)}\r\n                          name=\"lightsource\" />\r\n                  <HighlightIcon style={{transform: 'rotate(135deg)'}}/>\r\n                </label>\r\n                <label>\r\n                  <input  type=\"radio\" value=\"TR\" \r\n                          className='radiobtn'\r\n                          checked={LIGHT_SOURCE==='TR'} \r\n                          onChange={e=> onLightSourcetSet(e.target.value)}\r\n                          name=\"lightsource\"/>\r\n                  <HighlightIcon style={{transform: 'rotate(-135deg)'}}/>\r\n                </label>\r\n                <label>\r\n                  <input  type=\"radio\" value=\"BR\" \r\n                          className='radiobtn'\r\n                          checked={LIGHT_SOURCE==='BR'} \r\n                          onChange={e=> onLightSourcetSet(e.target.value)}\r\n                          name=\"lightsource\"/>\r\n                  <HighlightIcon style={{transform: 'rotate(-45deg)'}} />\r\n                </label>\r\n                <label>\r\n                  <input  type=\"radio\" value=\"BL\" \r\n                          className='radiobtn'\r\n                          checked={LIGHT_SOURCE==='BL'} \r\n                          onChange={e=> onLightSourcetSet(e.target.value)}\r\n                          name=\"lightsource\"/>\r\n                  <HighlightIcon style={{transform: 'rotate(45deg)'}}/>\r\n                </label>\r\n\r\n        </div>\r\n        <div className=\"elem cons\" >\r\n            <p>Rectangle SIZE&RADIUS properties:</p>\r\n            <div className=\"line conl1\">\r\n              <p className='params'>Rectangle width:<span>{BUTTON_WIDTH}</span></p>\r\n              <Slider name='LI' minVal={BUTTON_HEIGHT} maxVal={400} curVal={BUTTON_WIDTH} \r\n                      onChangeHandler={e=>onBtnWidthSet(e.target.value)}/>\r\n              <p>max: 400px</p>\r\n            </div>  \r\n            <div className=\"line conl1\">\r\n              <p className='params'>Rectangle height:<span>{BUTTON_HEIGHT}</span></p>\r\n              <Slider name='LI' minVal={30} maxVal={160} curVal={BUTTON_HEIGHT} \r\n                      onChangeHandler={e=>onBtnHeightSet(e.target.value)}/>\r\n              <p>max: 160px</p>\r\n            </div>  \r\n            <div className=\"line conl1\">\r\n              <p className='params'>Rectangle radius: <span>{BUTTON_RADIUS}</span></p>\r\n              <Slider name='BtnRSize' minVal={0} maxVal={50} \r\n                      curVal={BUTTON_RADIUS} \r\n                      onChangeHandler={e=>onButtonRadiusSet(e.target.value)} />\r\n              <p>max: 50px</p>\r\n            </div>\r\n        </div> \r\n        <div className=\"elem\">\r\n            <p>SHADOW Properties:</p>\r\n            <div className=\"normalText\">\r\n              <p className='params'>LIGHT:  <span>Distance:</span><span>{DISTANCE_LIGHT}</span>\r\n                                            <span>Blur:</span><span>{BLUR_LIGHT}</span>\r\n                                            <span>Intesity:</span><span>{intensity.format(INTENSITY_LIGHT/100)}</span></p>\r\n              <ShadowSet  distanceVar = {DISTANCE_LIGHT} distanceCallback = {onDistanceLightSet}\r\n                          blurVar = {BLUR_LIGHT} blurCallback = {onBlurLightSet}\r\n                          intensityVar = {INTENSITY_LIGHT} intensityCallback = {onIntensityLightSet}/>\r\n            </div>\r\n            <div className=\"normalText\">\r\n              <p className='params'>DARK:   <span>Distance:</span><span>{DISTANCE_DARK}</span>\r\n                                            <span>Blur:</span><span>{BLUR_DARK}</span>\r\n                                            <span>Intesity:</span><span>{intensity.format(INTENSITY_DARK/100)}</span></p>\r\n              <ShadowSet  distanceVar = {DISTANCE_DARK} distanceCallback = {onDistanceDarkSet}\r\n                          blurVar = {BLUR_DARK} blurCallback = {onBlurDarkSet}\r\n                          intensityVar = {INTENSITY_DARK} intensityCallback = {onIntensityDarkSet}/>\r\n            </div>\r\n          </div> \r\n        <div className=\"elem cons\" >\r\n            <p>CONCAVE & CONVEX type box shadow properties:</p>\r\n            <div className=\"line conl1\">\r\n              <p className='params'>LIGHT intensity:<span>{intensity.format(CON_INTENSITY_LIGHT/100)}</span></p>\r\n              <Slider name='LI' minVal={0} maxVal={100} curVal={CON_INTENSITY_LIGHT} \r\n                      onChangeHandler={e=>onConIntensityLightSet(e.target.value)}/>\r\n            </div>  \r\n            <div className=\"line conl1\">\r\n              <p className='params'>DARK intensity:  <span>{intensity.format(CON_INTENSITY_DARK/100)}</span></p>\r\n              <Slider name='LI' minVal={0} maxVal={100} curVal={CON_INTENSITY_DARK} \r\n                      onChangeHandler={e=>onConIntensityDarkSet(e.target.value)}/>\r\n            </div>  \r\n          </div> \r\n        </div> \r\n    )\r\n  }\r\n  \r\nexport default BgBoxProps\r\n\r\n\r\n","import {\r\n  BLUR_DARK, \r\n  TEXT_SIZE, \r\n  TEXT_COLOR, \r\n  BLUR_LIGHT, \r\n  CUSTOM_TEXT, \r\n  BG_BTN_SAME,\r\n  BUTTON_WIDTH,\r\n  LIGHT_SOURCE,\r\n  DISTANCE_DARK,\r\n  BUTTON_HEIGHT,\r\n  BUTTON_RADIUS,\r\n  INTENSITY_DARK, \r\n  DISTANCE_LIGHT, \r\n  INTENSITY_LIGHT, \r\n  BACKGROUND_COLOR,\r\n  BUTTON_BACKGROUND, \r\n  CON_INTENSITY_DARK,\r\n  CON_INTENSITY_LIGHT, \r\n} from './action.types'\r\n\r\nexport function BUTTON_RADIUS_SET(val){\r\nreturn{\r\n  type: BUTTON_RADIUS,\r\n  payload: val\r\n}}\r\n\r\nexport function LIGHT_SOURCE_SET(val){\r\nreturn{\r\n  type: LIGHT_SOURCE,\r\n  payload: val\r\n}}\r\n\r\nexport function BUTTON_WIDTH_SET(val){\r\nreturn{\r\n  type: BUTTON_WIDTH,\r\n  payload: val\r\n}}\r\n\r\nexport function BUTTON_HEIGHT_SET(val){\r\nreturn{\r\n  type: BUTTON_HEIGHT,\r\n  payload: val\r\n}}\r\n\r\n  export function BACKGROUND_COLOR_SET(val){\r\nreturn{\r\n  type: BACKGROUND_COLOR,\r\n  payload: val\r\n}}\r\n\r\nexport function TEXT_COLOR_SET(val){\r\n  return{\r\n    type:TEXT_COLOR,\r\n    payload: val\r\n  }}\r\n\r\nexport function DISTANCE_LIGHT_SET(val){\r\n  return{\r\n    type:DISTANCE_LIGHT,\r\n    payload: val\r\n  }}\r\n\r\nexport function DISTANCE_DARK_SET(val){\r\n  return{\r\n    type: DISTANCE_DARK,\r\n    payload: val\r\n  }}\r\n\r\nexport function INTENSITY_LIGHT_SET(val){\r\n  return{\r\n    type:INTENSITY_LIGHT,\r\n    payload: val\r\n  }}\r\n\r\nexport function INTENSITY_DARK_SET(val){\r\n  return{\r\n    type:INTENSITY_DARK,\r\n    payload: val\r\n  }}\r\n\r\nexport function BLUR_LIGHT_SET(val){\r\n  return{\r\n    type:BLUR_LIGHT,\r\n    payload: val\r\n  }}\r\n\r\nexport function BLUR_DARK_SET(val){\r\n  return{\r\n    type:BLUR_DARK,\r\n    payload: val\r\n  }}\r\n\r\nexport function BUTTON_BACKGROUND_SET(val){\r\n  return{\r\n    type:BUTTON_BACKGROUND,\r\n    payload: val\r\n  }}\r\n\r\nexport function TEXT_SIZE_SET(val){\r\n  return{\r\n    type:TEXT_SIZE,\r\n    payload: val\r\n  }} \r\n\r\nexport function CUSTOM_TEXT_SET(val){\r\n  return{\r\n    type:CUSTOM_TEXT,\r\n    payload: val\r\n  }}\r\n\r\nexport function CON_INTENSITY_LIGHT_SET(val){\r\n  return{\r\n    type:CON_INTENSITY_LIGHT,\r\n    payload: val\r\n  }}\r\n\r\nexport function CON_INTENSITY_DARK_SET(val){\r\n  return{\r\n    type:CON_INTENSITY_DARK,\r\n    payload: val\r\n  }}\r\n\r\nexport function BG_BTN_SAME_SET(val){\r\n  return{\r\n      type: BG_BTN_SAME,\r\n      payload: val\r\n  }}\r\n  \r\n","import React from 'react'\r\nimport BgBoxProps from './bg_box_props/bg-box-props.component'\r\nimport './toolbox.styles.scss'\r\n\r\nconst Toolbox = () => {\r\n  return (\r\n    <div className=\"toolBox flat\">\r\n      <BgBoxProps />\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Toolbox\r\n","import React from 'react';\nimport NeoContextProvider from './store/context';\nimport Figures from './components/figures/Figures.component'\nimport ToolBox from './components/toolbox/toolbox.component'\n\nimport './App.scss';\n\nconst App=()=> {\n  return(\n    <div className=\"main\">\n      <NeoContextProvider>\n        <Figures />\n        <ToolBox />\n      </NeoContextProvider>\n\n    </div>\n  )}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}